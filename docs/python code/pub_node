# Code Description: 
This code is a Python script that publishes messages to two topics named "left motor velocity" and "right motor velocity". The messages are of type Int32 and contain velocity values for the left and right motors of a robotic walker. The script initializes a subscriber node with a unique name and publishes messages to the specified topics with a frequency of 1 Hz. The user is prompted to enter velocity values for the left and right motors, which are then published to the respective topics. 

# This code block contains a shebang line that specifies the interpreter to be used to run the script.
# In this case, it specifies that the script should be run using Python 3.
#!/usr/bin/env python3

import rospy

# we are sending Int32 message
from std_msgs.msg import Int32

# this is our node name
nodeName='messagepublisher’

# these are the topic names- Make sure that in the Arduino code, the subscriber nodes are subscribed to these exact topics

topicNameLeftMotor='left motor velocity’
topicNameRightMotor= ‘right motor velocity’

# here, we initialize our subscriber node
# we set "anonymous True" to make sure that the node has a unique name 16# this parameter will add random numbers to the end of the node name

rospy.init_node(nodeName, anonymous=True)

# here, we are saying that our node is publishing messages to the specified topic names

# we specify the type of messages we want to publish (Int32)

# queue_size=5 simply means that we limit the number of queued messages if the subscriber cannot receive the messages fast enough

publisherLeftMotor=rospy.Publisher(topicNameLeftMotor, Int32, queue_size=5)
publisherRightMotor=rospy.Publisher(topicNameRightMotor, Int32, queue_size=5)

#here we specify the frequency of publishing the messages
#that is, we publish the messages with 1 [Hz]

ratePublisher=rospy.Rate(1)

# here we initialize the integers that we plan to send
# The values are from 0 255
# velocity of the left motor
LeftMotor = 0
# velocity of the right motor
rightMotor = 0

while not rospy.is_shutdown():
    rospy.loginfo(leftMotor)
    rospy.loginfo(RightMotor)
    
    leftMotor = int(input("Enter left motor velocity (0-255: "))
    rightMotor = int(input("Enter right motor velocity (0-255: "))
    
    publisherLeftMotor.publish(leftMotor)
    publisherRightMotor.publish(rightMotor)
    
    ratePublisher.sleep()